{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageWin","messageLose","gameScore","table","fieldCell","querySelectorAll","gameField","score","isWin","i","length","j","classList","remove","isGameOver","hasEmptyCell","gameContinueHorizontal","gameContinueVertical","moveHorizontal","diraction","row","sum","reverse","moveVertical","rowVertical","push","column","rowArray","filteredArray","filter","item","textContent","render","cell","children","className","add","addValue","randomCell","Math","floor","random","randomRow","number","randomTwoOrFour","addEventListener","contains","e","copyGameField","JSON","parse","stringify","key"],"mappings":"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","file":"main.6d50d6ba.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\nconst table = document.querySelector('tbody');\nconst fieldCell = document.querySelectorAll('.field-cell');\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nlet score = 0;\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('restart')) {\n    for (let i = 0; i < gameField.length; i++) {\n      for (let j = 0; j < gameField[i].length; j++) {\n        gameField[i][j] = 0;\n      }\n    };\n\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n\n    for (let i = 0; i < fieldCell.length; i++) {\n      fieldCell[i].textContent = '';\n      fieldCell[i].className = 'field-cell';\n    };\n  };\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n  };\n\n  addValue();\n  addValue();\n  render();\n});\n\ndocument.addEventListener('keydown', e => {\n  if (!messageLose.classList.contains('hidden')) {\n    return;\n  };\n\n  const copyGameField = JSON.parse(JSON.stringify(gameField));\n\n  if (e.key === 'ArrowUp') {\n    moveVertical('ArrowUp');\n  };\n\n  if (e.key === 'ArrowDown') {\n    moveVertical('ArrowDown');\n  };\n\n  if (e.key === 'ArrowRight') {\n    moveHorizontal('ArrowRight');\n  };\n\n  if (e.key === 'ArrowLeft') {\n    moveHorizontal('ArrowLeft');\n  };\n\n  if (JSON.stringify(copyGameField) === JSON.stringify(gameField)) {\n    return;\n  };\n\n  addValue();\n  render();\n  isWin();\n  isGameOver();\n}\n);\n\nfunction isWin() {\n  for (let i = 0; i < gameField.length; i++) {\n    for (let j = 0; j < gameField[i].length; j++) {\n      const cell = gameField[i][j];\n\n      if (cell === 2048) {\n        messageWin.classList.remove('hidden');\n      };\n    }\n  };\n};\n\nfunction isGameOver() {\n  let hasEmptyCell = false;\n\n  for (let i = 0; i < gameField.length; i++) {\n    for (let j = 0; j < gameField[i].length; j++) {\n      if (gameField[i][j] === 0) {\n        hasEmptyCell = true;\n      };\n    };\n  };\n\n  let gameContinueHorizontal = false;\n  let gameContinueVertical = false;\n\n  for (let i = 0; i < gameField.length; i++) {\n    for (let j = 0; j < gameField[i].length - 1; j++) {\n      if (gameField[i][j] === gameField[i][j + 1]) {\n        gameContinueHorizontal = true;\n      };\n    };\n  };\n\n  for (let i = 0; i < gameField.length - 1; i++) {\n    for (let j = 0; j < gameField[i].length; j++) {\n      if (gameField[i][j] === gameField[i + 1][j]) {\n        gameContinueVertical = true;\n      };\n    };\n  };\n\n  if (!hasEmptyCell && !gameContinueHorizontal && !gameContinueVertical) {\n    messageLose.classList.remove('hidden');\n  };\n};\n\nfunction moveHorizontal(diraction) {\n  for (let i = 0; i < gameField.length; i++) {\n    let row;\n\n    if (diraction === 'ArrowRight') {\n      row = sum(gameField[i].reverse()).reverse();\n    } else if (diraction === 'ArrowLeft') {\n      row = sum(gameField[i]);\n    };\n\n    gameField[i] = row;\n  };\n};\n\nfunction moveVertical(diraction) {\n  for (let j = 0; j < gameField.length; j++) {\n    const rowVertical = [];\n\n    for (let i = 0; i < gameField[j].length; i++) {\n      rowVertical.push(gameField[i][j]);\n    };\n\n    let column;\n\n    if (diraction === 'ArrowUp') {\n      column = sum(rowVertical);\n    } else if (diraction === 'ArrowDown') {\n      column = sum(rowVertical.reverse()).reverse();\n    }\n\n    gameField[0][j] = column[0];\n    gameField[1][j] = column[1];\n    gameField[2][j] = column[2];\n    gameField[3][j] = column[3];\n  };\n}\n\nfunction sum(rowArray) {\n  let filteredArray = rowArray.filter(item => item !== 0);\n\n  for (let i = 0; i < filteredArray.length; i++) {\n    if (filteredArray[i] === filteredArray[i + 1]) {\n      filteredArray[i] = filteredArray[i] * 2;\n      filteredArray[i + 1] = 0;\n      score += filteredArray[i];\n      gameScore.textContent = score;\n    };\n  }\n\n  filteredArray = filteredArray.filter(item => item !== 0);\n\n  while (filteredArray.length < gameField.length) {\n    filteredArray.push(0);\n  };\n\n  return filteredArray;\n}\n\nfunction render() {\n  for (let i = 0; i < gameField.length; i++) {\n    for (let j = 0; j < gameField[i].length; j++) {\n      const cell = gameField[i][j];\n\n      table.children[i].children[j].textContent = '';\n      table.children[i].children[j].className = 'field-cell';\n\n      if (cell !== 0) {\n        table.children[i].children[j].textContent = `${cell}`;\n        table.children[i].children[j].classList.add(`field-cell--${cell}`);\n      }\n    }\n  }\n};\n\nfunction addValue() {\n  let randomCell = Math.floor(Math.random() * 4);\n  let randomRow = Math.floor(Math.random() * 4);\n\n  while (gameField[randomRow][randomCell] !== 0) {\n    randomCell = Math.floor(Math.random() * 4);\n    randomRow = Math.floor(Math.random() * 4);\n  }\n\n  const number = randomTwoOrFour();\n\n  gameField[randomRow][randomCell] = number;\n};\n\nfunction randomTwoOrFour() {\n  return Math.random() < 0.1 ? 4 : 2;\n};\n"]}